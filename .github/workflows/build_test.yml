name: Build Kernel
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: |
            ~/.ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('Makefile') }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Setup Build Environment
        run: |
          echo "=== Installing Dependencies ==="
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi \
            git make bc bison openssl libssl-dev flex zip curl \
            ccache automake lzop

      - name: Setup Kernel Configuration
        run: |
          echo "=== Setting up Kernel Configuration ==="
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          
          mkdir -p out
          mkdir -p arch/arm64/boot/dts
          
          # 使用设备默认配置
          make O=out ARCH=arm64 clover_defconfig
          
          # 基础配置确认
          make O=out ARCH=arm64 olddefconfig

      - name: Build Kernel
        run: |
          echo "=== Building Kernel ==="
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
          export CCACHE_DIR=~/.ccache
          
          echo "=== Starting Kernel Build ==="
          mkdir -p out/arch/arm64/boot/dts
          
          make O=out \
            ARCH=arm64 \
            CROSS_COMPILE=aarch64-linux-gnu- \
            CROSS_COMPILE_ARM32=arm-linux-gnueabi- \
            -j$(nproc --all) 2>&1 | tee build.log
          
          if [ -f out/arch/arm64/boot/Image.gz-dtb ]; then
            echo "✅ Kernel compiled successfully!"
            ls -lh out/arch/arm64/boot/Image.gz-dtb
          else
            echo "❌ Kernel compilation failed!"
            echo "=== Build Log Tail ==="
            tail -n 100 build.log
            exit 1
          fi

      - name: Upload Build Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build-${{ github.run_id }}
          path: |
            out/arch/arm64/boot/Image.gz-dtb
            build.log
            out/.config
          retention-days: 7
