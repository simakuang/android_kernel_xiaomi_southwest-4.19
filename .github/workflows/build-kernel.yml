name: Build Kernel
on:
  push:
    branches: [ kernel-su ]  # 或你的目标分支
  pull_request:
    branches: [ kernel-su ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi
          sudo apt-get install -y git make bc bison openssl
          sudo apt-get install -y libssl-dev flex zip curl
          sudo apt-get install -y ccache automake lzop
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi

      - name: Download KernelSU-Next
        run: |
          git submodule add https://github.com/rifsxd/KernelSU-Next KernelSU
          ln -sf KernelSU/kernel drivers/kernelsu

      - name: Download SUSFS
        run: |
          git clone https://gitlab.com/simonpunk/susfs4ksu.git
          cp -r susfs4ksu/fs/susfs fs/
          echo "source \"fs/susfs/Kconfig\"" >> fs/Kconfig
          echo "obj-\$(CONFIG_SUSFS) += susfs/" >> fs/Makefile

      - name: Setup Kernel Configuration
        run: |
          # 修改 init/main.c
          echo '#ifdef CONFIG_KPROBES' >> init/main.c.tmp
          echo '#include "../drivers/kernelsu/ksu.h"' >> init/main.c.tmp
          cat init/main.c >> init/main.c.tmp
          mv init/main.c.tmp init/main.c
          
          # 设置编译环境
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          
          # 配置内核
          make arch/arm64/configs/clover_defconfig  # 根据你的配置文件修改
          
          # 启用必要的配置
          scripts/config --set-str CONFIG_LOCALVERSION "-KernelSU-SUSFS"
          scripts/config --enable CONFIG_KPROBES
          scripts/config --enable CONFIG_HAVE_KPROBES
          scripts/config --enable CONFIG_KPROBE_EVENTS
          scripts/config --enable CONFIG_OVERLAY_FS
          scripts/config --enable CONFIG_SUSFS

      - name: Build Kernel
        run: |
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          make -j$(nproc --all)

      - name: Create Release Package
        run: |
          mkdir -p AnyKernel3
          cp arch/arm64/boot/Image.gz-dtb AnyKernel3/
          cd AnyKernel3
          zip -r9 ../kernel-release.zip *

      - name: Upload Kernel Artifact
        uses: actions/upload-artifact@v3
        with:
          name: kernel-release
          path: kernel-release.zip

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: kernel-release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
